<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xiaojian.pick.mapper.TopicMapper" >
  <resultMap id="BaseResultMap" type="com.xiaojian.pick.entity.Topic" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="theme" property="theme" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="comment_count" property="commentCount" jdbcType="INTEGER" />
    <result column="click_count" property="clickCount" jdbcType="INTEGER" />
    <result column="publish_date" property="publishDate" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="hot_degree" property="hotDegree" jdbcType="INTEGER" />
  </resultMap>
<!--  加载用户信息  -->
  <resultMap id="ResultMapWithUser" type="com.xiaojian.pick.entity.Topic" extends="BaseResultMap" >
    <association property="user" javaType="User"
                 select="com.xiaojian.pick.mapper.UserMapper.findById" column="user_id">
    </association>
  </resultMap>
<!-- 加载帖子图片列表 -->
  <resultMap id="ResultMapWithImgUrl" type="com.xiaojian.pick.entity.Topic" extends="ResultMapWithUser" >
    <collection property="topicImgList" ofType="TopicImg"
                select="com.xiaojian.pick.mapper.TopicImgMapper.findByTopicId" column="id">
    </collection>
  </resultMap>
<!-- 加载帖子评论列表 -->
  <resultMap id="ResultMapWithComment" type="com.xiaojian.pick.entity.Topic" extends="ResultMapWithImgUrl" >
    <collection property="commentList" ofType="Comment"
                select="com.xiaojian.pick.mapper.CommentMapper.findByTopicId" column="id">
    </collection>
  </resultMap>


<!--  // 根据 id 查询帖子（简单内容）-->
<!--  Topic findByTopicId(Integer id);-->
  <select id="findByTopicId" parameterType="Integer" resultMap="BaseResultMap">
    select * from topic
    where id = #{id}
  </select>

<!--   // 根据 id 查询帖子
  Topic findById(Integer id);-->
  <select id="findById" parameterType="Integer" resultMap="ResultMapWithComment">
    select * from topic
    where id = #{id}
  </select>

<!--  // 根据 用户id 查询其发布的-->
<!--  List<Topic> findByUserId(Integer userId);-->
  <select id="findByUserId" parameterType="Integer" resultMap="BaseResultMap">
    select * from topic
    where user_id = #{userId} and state = 1
    order by hot_degree desc,publish_date desc
  </select>

<!--  // 查询所有帖子-->
<!--  List<Topic> findAll();-->
  <select id="findAll" resultMap="ResultMapWithUser">
    select * from topic
    order by publish_date desc
  </select>

<!-- 条件查询 动态sql -->
  <sql id="select_param">
    <where>
      <if test="startTime != null and startTime != '' and endTime != null and endTime != ''">
        DATE_FORMAT(publish_date,'%Y-%m-%d') between DATE_FORMAT( #{startTime},'%Y-%m-%d') and DATE_FORMAT( #{endTime},'%Y-%m-%d')
      </if>
      <if test="theme != null and theme != ''">
        and theme like #{theme}
      </if>
      <if test="description != null and description != ''">
        and description like #{description}
      </if>
      <if test="state != null and state != ''">
        and state = #{state}
      </if>
      <if test="hotDegree != null and hotDegree != ''">
        and hot_degree != 0
      </if>
      <if test="publishDate != null">
        and DATE_FORMAT(publish_date,'%Y-%m-%d') = DATE_FORMAT(#{publishDate},'%Y-%m-%d')
      </if>
    </where>
  </sql>

<!--  // 根据条件（帖子标题 、帖子内容）查询 帖子列表-->
<!--      List<Topic> findByParam(TopicCustom topicCustom);-->
  <select id="findByParam" parameterType="com.xiaojian.pick.page.TopicCustom" resultMap="ResultMapWithUser">
    select * from topic
    <include refid="select_param"></include>
    order by state desc,hot_degree desc,publish_date desc
  </select>

<!--  // 获取所有 帖子数量-->
<!--  Long getCount(TopicCustom topicCustom);-->
  <select id="getCount" parameterType="com.xiaojian.pick.page.TopicCustom" resultType="Long">
    select count(*) from topic
    <include refid="select_param"></include>
  </select>

<!--  // 添加帖子信息-->
<!--  int addTopic(Topic topic);-->
  <insert id="addTopic" parameterType="com.xiaojian.pick.entity.Topic" useGeneratedKeys="true" keyProperty="id">
    insert into topic(theme, description, user_id, comment_count, click_count, publish_date, state, hot_degree)
    values(#{theme},#{description},#{user.id},#{commentCount},#{clickCount},#{publishDate},#{state},#{hotDegree})
  </insert>


<!--  // 修改帖子状态（0，已删除；1，展示中）-->
<!--  int updateTopicState(Topic topic);-->
  <update id="updateTopicState" parameterType="com.xiaojian.pick.entity.Topic">
    update topic set state = #{state} where id = #{id}
  </update>

<!--// 修改帖子热门程度（热门程度：1,2,3）
    int updateTopicHot(Topic topic);-->
  <update id="updateTopicHot" parameterType="com.xiaojian.pick.entity.Topic">
    update topic set hot_degree = #{hotDegree} where id = #{id}
  </update>


<!--  // 帖子点击量 +1-->
<!--  int addTopicClick(Integer id);-->
  <update id="addTopicClick" parameterType="Integer">
    update topic set click_count = click_count + 1 where id = #{id}
  </update>

<!--  // 帖子评论数 +1-->
<!--  int addTopicComment(Integer id);-->
  <update id="addTopicComment" parameterType="Integer">
    update topic set comment_count = comment_count + 1 where id = #{id}
  </update>
<!--  // 帖子评论数 -1-->
<!--  int subTopicComment(Integer id);-->
  <update id="subTopicComment" parameterType="Integer">
    update topic set comment_count = comment_count - 1 where id = #{id}
  </update>


<!--  // 小程序中查看一个用户发布的帖子-->
<!--  List<Topic> getUserPublish(Topic topic);-->
  <select id="getUserPublish" parameterType="com.xiaojian.pick.entity.Topic" resultMap="BaseResultMap">
    select * from commodity
    where user_id = #{user.id} and state = 1
    order by publish_date desc
  </select>

<!--  // 分页 查询 未删除 的帖子列表-->
<!--  List<Topic> findByPage(Topic topic);-->
  <select id="findByPage" parameterType="com.xiaojian.pick.entity.Topic" resultMap="ResultMapWithImgUrl">
    select * from topic
    <where>
      <if test="hotDegree != null and hotDegree != 0">
        hot_degree != 0
      </if>
      <if test="state == null or state != null or state == '' or state != ''">
        and state = 1
      </if>
    </where>
    order by publish_date desc
  </select>


<!--  // 关键字搜索帖子、分页-->
<!--  List<Topic> search(String content);-->
  <select id="search" parameterType="String" resultMap="BaseResultMap">
    select * from topic
    where (theme like #{content} or description like #{content}) and state = 1
    order by publish_date desc
  </select>

<!--  // 真实删除帖子记录-->
<!--  int realDelTopic(Integer id);-->
  <delete id="realDelTopic" parameterType="Integer">
    delete from topic where id = #{id}
  </delete>

<!--  // 根据 状态 查询帖子列表-->
<!--  List<Topic> findByState(Integer state);-->
  <select id="findByState" parameterType="Integer" resultMap="BaseResultMap">
    select  * from topic
    where state = #{state}
  </select>

<!--  // 根据 状态 删除帖子列表-->
<!--  int delTopicByState(Integer state);-->
  <delete id="delTopicByState" parameterType="Integer">
    delete from topic
    where state = #{state}
  </delete>
</mapper>